!function(f){"object"==typeof exports&&"undefined"!=typeof module?module.exports=f():"function"==typeof define&&define.amd?define([],f):("undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this).CowTranslator=f()}(function(){return function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);throw(f=new Error("Cannot find module '"+i+"'")).code="MODULE_NOT_FOUND",f}c=n[i]={exports:{}},e[i][0].call(c.exports,function(r){return o(e[i][1][r]||r)},c,c.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}({1:[function(require,module,exports){void 0!==module&&(module.exports={TranslationResult:class{text="";cow="";error="";warning=!1;success=!1},SUPPORTED_CHARS:["a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","1","2","3","4","5","6","7","8","9","0","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","cV","W","X","Y","Z"," ",".",",","!","?",":",";",'"',"'","`","~","\\","/","|","=","-","_","+","(",")","[","]","{","}","\n","\t","\r"],MOO:"moooooo",stringToBinString:function(input){let output="";return input.split("").forEach(char=>{output+=char.toUpperCase()===char?"1":"0"}),output},binStringToDecimal:function(input){return parseInt(input,2)},addToStringLikeBinary:function(input,toAdd){let output="";var inputAsBin;let inputAsDecimal,outputAsBin;for(inputAsBin=this.stringToBinString(input),inputAsDecimal=this.binStringToDecimal(inputAsBin),inputAsDecimal+=toAdd,outputAsBin=inputAsDecimal.toString(2);outputAsBin.length<inputAsBin.length;)outputAsBin="0"+outputAsBin;for(let i=0;i<outputAsBin.length;i++){let char=input[i];var currentBit=outputAsBin[i];output+="1"===currentBit?char.toUpperCase():char.toLowerCase()}return output},textToCow:function(input){let result=new this.TranslationResult;if(!(result.text=input))return console.warn("No text specified"),result.error="No text specified",result;input=input.trim();let inputAsNumbers="",errors=0;if(input.split("").forEach(function(char){if(-1===this.SUPPORTED_CHARS.indexOf(char))return console.warn("Unsupported character: "+char),result.warning=!0,result.error="Unsupported character: "+char,void errors++;char=(10<=this.SUPPORTED_CHARS.indexOf(char)?"":"0")+this.SUPPORTED_CHARS.indexOf(char);inputAsNumbers+=char},this),errors===input.length)return result.error="No supperted characters found",result;let inputAsMoos="";return inputAsNumbers.match(/.{1,2}/g).forEach(function(number){number=this.addToStringLikeBinary(this.MOO,parseInt(number));inputAsMoos+=number+" "},this),result.cow=inputAsMoos.trim(),result.success=!0,result},cowToText:function(input){let result=new this.TranslationResult;if(!(result.cow=input))return console.warn("No text specified"),result.error="No text specified",result;let moosVec=(input=input.trim()).split(" "),inputAsText="",errors=0;return moosVec.forEach(moo=>{return moo.toLowerCase()!==this.MOO?(errors++,console.warn("Invalid moo: "+moo),result.warning=!0,void(result.error="Invalid moo: "+moo)):(mooAsBin=this.stringToBinString(moo),mooAsBin=this.binStringToDecimal(mooAsBin),void 0===this.SUPPORTED_CHARS[mooAsBin]?(errors++,console.warn("Unsupported char : "+moo),result.warning=!0,void(result.error="Unsupported char : "+moo)):void(inputAsText+=this.SUPPORTED_CHARS[mooAsBin]));var mooAsBin},this),errors===moosVec.length?result.error="No supperted characters found":(result.text=inputAsText,result.success=!0),result}})},{}]},{},[1])(1)});
